{
  "Comment": "Automated AMI Backup Workflow",
  "StartAt": "CreateAMI",
  "States": {
    "CreateAMI": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:createAMI:$LATEST",
      "Next": "WaitForImageAvailable",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "NotifyFailure"
        }
      ]
    },
    "WaitForImageAvailable": {
      "Type": "Wait",
      "Seconds": 600,
      "Next": "ShareAMI"
    },
    "ShareAMI": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:shareAMI",
      "InputPath": "$.image_id",
      "Next": "RetainBackups",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "NotifyFailure"
        }
      ]
    },
    "RetainBackups": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:retainLastFiveImages",
      "Next": "NotifySuccess",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "NotifyFailure"
        }
      ]
    },
    "NotifySuccess": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "arn:aws:sns:REGION:ACCOUNT_ID:SendNotifications",
        "Message": "Step Function execution succeeded. AMI created and shared successfully.",
        "Subject": "Step Function Execution Success"
      },
      "End": true
    },
    "NotifyFailure": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "arn:aws:sns:REGION:ACCOUNT_ID:SendNotifications",
        "Message": {
          "Fn::Join": [
            "",
            [
              "Step Function execution failed with error: ",
              {
                "Fn::GetAtt": ["$.Error", "Message"]
              }
            ]
          ]
        },
        "Subject": "AMI Creation and Sharing Step Function Execution Failure"
      },
      "Next": "ErrorHandlingState"
    },
    "ErrorHandlingState": {
      "Type": "Fail",
      "Cause": "An error occurred in the state machine",
      "Error": "ErrorName"
    }
  }
}

